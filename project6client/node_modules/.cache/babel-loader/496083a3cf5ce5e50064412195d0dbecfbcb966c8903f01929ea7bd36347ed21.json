{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\project6all\\\\project6client\\\\src\\\\pages\\\\Todos.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./Todos.css\";\nimport { requestsGet, requestsPost, requestsPut, requestsDelete } from \"../requestsToServer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = _ref => {\n  _s();\n  let {\n    onSort\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const handleChange = event => {\n    const sortType = event.target.value;\n    setSelectedValue(sortType);\n    onSort(sortType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectComp\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"select\",\n      children: \"Choose an option:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"select\",\n      value: selectedValue,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Please choose an option--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"serial\",\n        children: \"Serial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"execution\",\n        children: \"Execution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"alphabetical\",\n        children: \"Alphabetical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"random\",\n        children: \"Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You selected: \", selectedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Select, \"3549XmxMMOyg6yW+rzOI1hhPUfs=\");\n_c = Select;\nconst Todos = () => {\n  _s2();\n  const [todos, setTodos] = useState([]);\n  const [addFlag, setAddFlag] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [updateId, setUpdateId] = useState(null); // New state variable\n  const [updateTitle, setUpdateTitle] = useState(\"\");\n  const [updateCompleted, setUpdateCompleted] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const data = await requestsGet(`/users/${user.id}/todos`);\n\n        // const response = await fetch(\n        //   `http://localhost:4000/users/${user.id}/todos`\n        // );\n        // const data = await response.json();\n        setTodos(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [addFlag]);\n  const handleToggleTodo = id => {\n    let newObj;\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        newObj = {\n          ...todo,\n          completed: todo.completed ? 0 : 1\n        };\n        requestsPut(`/todos/${id}`, newObj);\n        return newObj;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const handleSortTodos = sortType => {\n    let sortedTodos = [...todos];\n    switch (sortType) {\n      case \"serial\":\n        sortedTodos.sort((a, b) => a.id - b.id);\n        break;\n      case \"execution\":\n        sortedTodos.sort((a, b) => a.completed - b.completed);\n        break;\n      case \"alphabetical\":\n        sortedTodos.sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case \"random\":\n        sortedTodos.sort(() => Math.random() - 0.5);\n        break;\n      default:\n        break;\n    }\n    setTodos(sortedTodos);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n    let newTodo = {\n      userId: user.id,\n      id: 0,\n      title: title,\n      completed: 0\n    };\n    await requestsPost(\"/todos\", newTodo);\n    setTodos([...todos, newTodo]);\n    setAddFlag(true); //עדיין צריך לרפרש\n    setAddFlag(false);\n  };\n\n  // const handleUpdate = (id) => {\n  //   let updatedTodo;\n  //   const updatedTodos = todos.map((todo) => {\n  //     if (todo.id === id) {\n  //       updatedTodo = {\n  //         ...todo,\n  //         title: \"updated is work\",\n  //         completed: 1,\n  //       };\n  //       requestsPut(`/todos/${id}`, updatedTodo);\n  //       return updatedTodo;\n  //     }\n  //     return todo;\n  //   });\n\n  //   setTodos(updatedTodos);\n  // };\n\n  const handleUpdate = id => {\n    setUpdateId(id); // Set the ID of the todo to be updated\n    const todoToUpdate = todos.find(todo => todo.id === id);\n    setUpdateTitle(todoToUpdate.title);\n    setUpdateCompleted(todoToUpdate.completed);\n  };\n  const handleUpdateSubmit = async event => {\n    event.preventDefault();\n    const updatedTodo = {\n      ...todos.find(todo => todo.id === updateId),\n      title: updateTitle,\n      completed: updateCompleted\n    };\n    await requestsPut(`/todos/${updateId}`, updatedTodo);\n    const updatedTodos = todos.map(todo => todo.id === updateId ? updatedTodo : todo);\n    setTodos(updatedTodos);\n    setUpdateId(null); // Reset the update ID\n  };\n\n  const handleDelete = id => {\n    requestsDelete(`/todos/${id}`);\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todos-header\",\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      onSort: handleSortTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"todo\",\n          name: \"todo\",\n          value: title || \"\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos-list\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"todo-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"todo-title\",\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"todo-checkbox\",\n              checked: todo.completed,\n              onChange: () => handleToggleTodo(todo.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"todo-checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(todo.id),\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo.id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), updateId === todo.id && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleUpdateSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: updateTitle,\n              onChange: e => setUpdateTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Completed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: updateCompleted,\n                onChange: e => setUpdateCompleted(e.target.checked ? 1 : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s2(Todos, \"h0p76JclUIF2Jpxxxa4VCFyti5k=\");\n_c2 = Todos;\nexport default Todos;\n\n// let newPost = {\n//   userId: user.id,\n//   id: 0,\n//   title: title,\n//   body: \"body\",\n// };\n// requestsPost(\"/posts\", newPost);\n\n// let newInUser = {\n//   id: 0,\n//   name: \"talyaupdate\",\n//   username: \"talya\",\n//   email: \"talya@karina.biz\",\n//   phone: \"024-648-3800\",\n//   website: \"talya\",\n//   rank: \"user\",\n//   api_key: \"zLCyhlxcVRCisJNX9hUt\",\n// };\n// requestsPost(\"/users\", newInUser);\n\n// let newUser = {\n//   id: 0,\n//   username: \"talya2\",\n//   password: \"2\",\n// };\n// requestsPost(\"/passwords\", newUser);\nvar _c, _c2;\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"Todos\");","map":{"version":3,"names":["useState","useEffect","requestsGet","requestsPost","requestsPut","requestsDelete","jsxDEV","_jsxDEV","Select","_ref","_s","onSort","selectedValue","setSelectedValue","handleChange","event","sortType","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","Todos","_s2","todos","setTodos","addFlag","setAddFlag","title","setTitle","updateId","setUpdateId","updateTitle","setUpdateTitle","updateCompleted","setUpdateCompleted","fetchData","user","JSON","parse","localStorage","getItem","data","error","console","handleToggleTodo","newObj","updatedTodos","map","todo","completed","handleSortTodos","sortedTodos","sort","a","b","localeCompare","Math","random","handleSubmit","preventDefault","newTodo","userId","handleUpdate","todoToUpdate","find","handleUpdateSubmit","updatedTodo","handleDelete","filter","onSubmit","type","name","e","checked","onClick","_c2","$RefreshReg$"],"sources":["C:/fullstack/project6all/project6client/src/pages/Todos.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./Todos.css\";\r\nimport {\r\n  requestsGet,\r\n  requestsPost,\r\n  requestsPut,\r\n  requestsDelete,\r\n} from \"../requestsToServer.js\";\r\n\r\nconst Select = ({ onSort }) => {\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const sortType = event.target.value;\r\n    setSelectedValue(sortType);\r\n    onSort(sortType);\r\n  };\r\n\r\n  return (\r\n    <div className=\"selectComp\">\r\n      <label htmlFor=\"select\">Choose an option:</label>\r\n      <select id=\"select\" value={selectedValue} onChange={handleChange}>\r\n        <option value=\"\">--Please choose an option--</option>\r\n        <option value=\"serial\">Serial</option>\r\n        <option value=\"execution\">Execution</option>\r\n        <option value=\"alphabetical\">Alphabetical</option>\r\n        <option value=\"random\">Random</option>\r\n      </select>\r\n      <p>You selected: {selectedValue}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Todos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [addFlag, setAddFlag] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [updateId, setUpdateId] = useState(null); // New state variable\r\n  const [updateTitle, setUpdateTitle] = useState(\"\");\r\n  const [updateCompleted, setUpdateCompleted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const data = await requestsGet(`/users/${user.id}/todos`);\r\n\r\n        // const response = await fetch(\r\n        //   `http://localhost:4000/users/${user.id}/todos`\r\n        // );\r\n        // const data = await response.json();\r\n        setTodos(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [addFlag]);\r\n\r\n  const handleToggleTodo = (id) => {\r\n    let newObj;\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        newObj = {\r\n          ...todo,\r\n          completed: todo.completed ? 0 : 1,\r\n        };\r\n\r\n        requestsPut(`/todos/${id}`, newObj);\r\n        return newObj;\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const handleSortTodos = (sortType) => {\r\n    let sortedTodos = [...todos];\r\n\r\n    switch (sortType) {\r\n      case \"serial\":\r\n        sortedTodos.sort((a, b) => a.id - b.id);\r\n        break;\r\n      case \"execution\":\r\n        sortedTodos.sort((a, b) => a.completed - b.completed);\r\n        break;\r\n      case \"alphabetical\":\r\n        sortedTodos.sort((a, b) => a.title.localeCompare(b.title));\r\n        break;\r\n      case \"random\":\r\n        sortedTodos.sort(() => Math.random() - 0.5);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setTodos(sortedTodos);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    let newTodo = {\r\n      userId: user.id,\r\n      id: 0,\r\n      title: title,\r\n      completed: 0,\r\n    };\r\n    await requestsPost(\"/todos\", newTodo);\r\n    setTodos([...todos, newTodo]);\r\n    setAddFlag(true); //עדיין צריך לרפרש\r\n    setAddFlag(false);\r\n  };\r\n\r\n  // const handleUpdate = (id) => {\r\n  //   let updatedTodo;\r\n  //   const updatedTodos = todos.map((todo) => {\r\n  //     if (todo.id === id) {\r\n  //       updatedTodo = {\r\n  //         ...todo,\r\n  //         title: \"updated is work\",\r\n  //         completed: 1,\r\n  //       };\r\n  //       requestsPut(`/todos/${id}`, updatedTodo);\r\n  //       return updatedTodo;\r\n  //     }\r\n  //     return todo;\r\n  //   });\r\n\r\n  //   setTodos(updatedTodos);\r\n  // };\r\n\r\n  const handleUpdate = (id) => {\r\n    setUpdateId(id); // Set the ID of the todo to be updated\r\n    const todoToUpdate = todos.find((todo) => todo.id === id);\r\n    setUpdateTitle(todoToUpdate.title);\r\n    setUpdateCompleted(todoToUpdate.completed);\r\n  };\r\n  const handleUpdateSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const updatedTodo = {\r\n      ...todos.find((todo) => todo.id === updateId),\r\n      title: updateTitle,\r\n      completed: updateCompleted,\r\n    };\r\n    await requestsPut(`/todos/${updateId}`, updatedTodo);\r\n\r\n    const updatedTodos = todos.map((todo) =>\r\n      todo.id === updateId ? updatedTodo : todo\r\n    );\r\n    setTodos(updatedTodos);\r\n    setUpdateId(null); // Reset the update ID\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    requestsDelete(`/todos/${id}`);\r\n\r\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todos-container\">\r\n      <h1 className=\"todos-header\">Todos</h1>\r\n      <Select onSort={handleSortTodos} />\r\n      <form onSubmit={handleSubmit}>\r\n        <h4>add todo</h4>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"todo\"\r\n            name=\"todo\"\r\n            value={title || \"\"}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n\r\n      <div className=\"background\">\r\n        <div className=\"todos-list\">\r\n          {todos.map((todo) => (\r\n            <div key={todo.id} className=\"todo-item\">\r\n              <label className=\"todo-label\">\r\n                {/* <span className=\"todo-id\">{todo.id}</span>\r\n                <span className=\"todo-id\">- </span> */}\r\n                <span className=\"todo-title\">{todo.title}</span>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"todo-checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => handleToggleTodo(todo.id)}\r\n                />\r\n                <span className=\"todo-checkmark\"></span>\r\n                <button onClick={() => handleUpdate(todo.id)}>update</button>\r\n                <button onClick={() => handleDelete(todo.id)}>\r\n                  delete\r\n                </button>{\" \"}\r\n                {/* Added delete functionality */}\r\n              </label>\r\n              {updateId === todo.id && (\r\n                <form onSubmit={handleUpdateSubmit}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={updateTitle}\r\n                    onChange={(e) => setUpdateTitle(e.target.value)}\r\n                  />\r\n                  <label>\r\n                    Completed:\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={updateCompleted}\r\n                      onChange={(e) =>\r\n                        setUpdateCompleted(e.target.checked ? 1 : 0)\r\n                      }\r\n                    />\r\n                  </label>\r\n                  <button type=\"submit\">Save</button>\r\n                </form>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n\r\n// let newPost = {\r\n//   userId: user.id,\r\n//   id: 0,\r\n//   title: title,\r\n//   body: \"body\",\r\n// };\r\n// requestsPost(\"/posts\", newPost);\r\n\r\n// let newInUser = {\r\n//   id: 0,\r\n//   name: \"talyaupdate\",\r\n//   username: \"talya\",\r\n//   email: \"talya@karina.biz\",\r\n//   phone: \"024-648-3800\",\r\n//   website: \"talya\",\r\n//   rank: \"user\",\r\n//   api_key: \"zLCyhlxcVRCisJNX9hUt\",\r\n// };\r\n// requestsPost(\"/users\", newInUser);\r\n\r\n// let newUser = {\r\n//   id: 0,\r\n//   username: \"talya2\",\r\n//   password: \"2\",\r\n// };\r\n// requestsPost(\"/passwords\", newUser);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}