{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\project6all\\\\project6client\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { requestsGet, requestsPost } from \"../requestsToServer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    post,\n    onPostSelect\n  } = _ref;\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const handleToggleComments = async () => {\n    if (showComments) {\n      setShowComments(false);\n    } else {\n      try {\n        const data = requestsGet(`/posts/${post.id}/comments`);\n        // const response = await fetch(\n        //   `http://localhost:4000/posts/${post.id}/comments`\n        // );\n        // const data = await response.json();\n        setComments(data);\n        setShowComments(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `post-title ${onPostSelect === post.id ? \"active\" : \"\"}`,\n      onClick: () => onPostSelect(post.id),\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"comments-toggle\",\n      onClick: handleToggleComments,\n      children: showComments ? \"Hide Comments\" : \"Show Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"comment-name\",\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-email\",\n          children: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-body\",\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"dtBkjhrgp2i8EO3d396swvkNOcw=\");\n_c = Post;\nconst Posts = () => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const response = await fetch(hostname + path);\n        return await response.json();\n        const data = requestsGet(`/users/${user.id}/posts`);\n        // const response = await fetch(\n        //   `http://localhost:4000/users/${user.id}/posts`\n        // );\n        // const data = await response.json();\n        console.log(data);\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handlePostSelect = postId => {\n    setSelectedPost(postId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onPostSelect: handlePostSelect\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(Posts, \"nZP3Fsrc8kzc4EI8y80UU9Kha0Q=\");\n_c2 = Posts;\nexport default Posts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Posts\");","map":{"version":3,"names":["useEffect","useState","requestsGet","requestsPost","jsxDEV","_jsxDEV","Post","_ref","_s","post","onPostSelect","showComments","setShowComments","comments","setComments","handleToggleComments","data","id","error","console","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","body","map","comment","name","email","_c","Posts","_s2","posts","setPosts","selectedPost","setSelectedPost","fetchData","user","JSON","parse","localStorage","getItem","response","fetch","hostname","path","json","log","handlePostSelect","postId","_c2","$RefreshReg$"],"sources":["C:/fullstack/project6all/project6client/src/pages/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Posts.css\";\r\nimport { requestsGet, requestsPost } from \"../requestsToServer.js\";\r\n\r\nconst Post = ({ post, onPostSelect }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const handleToggleComments = async () => {\r\n    if (showComments) {\r\n      setShowComments(false);\r\n    } else {\r\n      try {\r\n        const data = requestsGet(`/posts/${post.id}/comments`);\r\n        // const response = await fetch(\r\n        //   `http://localhost:4000/posts/${post.id}/comments`\r\n        // );\r\n        // const data = await response.json();\r\n        setComments(data);\r\n        setShowComments(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-item\">\r\n      <h2\r\n        className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\r\n        onClick={() => onPostSelect(post.id)}\r\n      >\r\n        {post.title}\r\n      </h2>\r\n      <div className=\"post-body\">{post.body}</div>\r\n      <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n        {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n      </button>\r\n      {showComments && (\r\n        <div className=\"comments-container\">\r\n          {comments.map((comment) => (\r\n            <div key={comment.id} className=\"comment-item\">\r\n              <h4 className=\"comment-name\">{comment.name}</h4>\r\n              <div className=\"comment-email\">{comment.email}</div>\r\n              <div className=\"comment-body\">{comment.body}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const response = await fetch(hostname + path);\r\n        return await response.json();\r\n        const data = requestsGet(`/users/${user.id}/posts`);\r\n        // const response = await fetch(\r\n        //   `http://localhost:4000/users/${user.id}/posts`\r\n        // );\r\n        // const data = await response.json();\r\n        console.log(data);\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePostSelect = (postId) => {\r\n    setSelectedPost(postId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Posts</h1>\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <Post key={post.id} post={post} onPostSelect={handlePostSelect} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}