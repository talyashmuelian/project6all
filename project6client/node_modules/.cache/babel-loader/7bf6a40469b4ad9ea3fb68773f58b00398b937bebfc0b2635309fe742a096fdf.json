{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactfullstack\\\\FSWD_project5\\\\project5\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n//import \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${user.id}/posts`);\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    async function fetchData() {\n      if (selectedPostId) {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${selectedPostId}/comments`);\n        const data = await response.json();\n        setComments(data);\n      } else {\n        setComments([]);\n      }\n    }\n    fetchData();\n  }, [selectedPostId]);\n  const handlePostClick = id => {\n    setSelectedPostId(id);\n  };\n  const handleCommentClick = id => {\n    // handle comment click here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `post-item${selectedPostId === post.id ? \" selected\" : \"\"}`,\n        onClick: () => handlePostClick(post.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"post-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-body\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), selectedPostId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"comments-header\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        onClick: () => handleCommentClick(comment.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"comment-name\",\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-email\",\n          children: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-body\",\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"ybCaDb/r3KkD8bn7KzjOnRSImq0=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","selectedPostId","setSelectedPostId","comments","setComments","fetchData","user","JSON","parse","localStorage","getItem","response","fetch","id","data","json","error","console","handlePostClick","handleCommentClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","onClick","title","body","comment","name","email","_c","$RefreshReg$"],"sources":["C:/reactfullstack/FSWD_project5/project5/src/pages/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n//import \"./Posts.css\";\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/users/${user.id}/posts`\r\n        );\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (selectedPostId) {\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/posts/${selectedPostId}/comments`\r\n        );\r\n        const data = await response.json();\r\n        setComments(data);\r\n      } else {\r\n        setComments([]);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [selectedPostId]);\r\n\r\n  const handlePostClick = (id) => {\r\n    setSelectedPostId(id);\r\n  };\r\n\r\n  const handleCommentClick = (id) => {\r\n    // handle comment click here\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Posts</h1>\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <div\r\n            key={post.id}\r\n            className={`post-item${\r\n              selectedPostId === post.id ? \" selected\" : \"\"\r\n            }`}\r\n            onClick={() => handlePostClick(post.id)}\r\n          >\r\n            <h2 className=\"post-title\">{post.title}</h2>\r\n            <p className=\"post-body\">{post.body}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedPostId && (\r\n        <div className=\"comments-list\">\r\n          <h2 className=\"comments-header\">Comments</h2>\r\n          {comments.map((comment) => (\r\n            <div\r\n              key={comment.id}\r\n              className=\"comment-item\"\r\n              onClick={() => handleCommentClick(comment.id)}\r\n            >\r\n              <h3 className=\"comment-name\">{comment.name}</h3>\r\n              <p className=\"comment-email\">{comment.email}</p>\r\n              <p className=\"comment-body\">{comment.body}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,eAAeY,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC1D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CN,IAAI,CAACO,EAAG,QACxD,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCf,QAAQ,CAACc,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IAEAX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,eAAeY,SAASA,CAAA,EAAG;MACzB,IAAIJ,cAAc,EAAE;QAClB,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CX,cAAe,WAC/D,CAAC;QACD,MAAMa,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCX,WAAW,CAACU,IAAI,CAAC;MACnB,CAAC,MAAM;QACLV,WAAW,CAAC,EAAE,CAAC;MACjB;IACF;IAEAC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMiB,eAAe,GAAIL,EAAE,IAAK;IAC9BX,iBAAiB,CAACW,EAAE,CAAC;EACvB,CAAC;EAED,MAAMM,kBAAkB,GAAIN,EAAE,IAAK;IACjC;EAAA,CACD;EAED,oBACEjB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BzB,OAAA;MAAIwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC7B,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBtB,KAAK,CAAC2B,GAAG,CAAEC,IAAI,iBACd/B,OAAA;QAEEwB,SAAS,EAAG,YACVnB,cAAc,KAAK0B,IAAI,CAACd,EAAE,GAAG,WAAW,GAAG,EAC5C,EAAE;QACHe,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAACS,IAAI,CAACd,EAAE,CAAE;QAAAQ,QAAA,gBAExCzB,OAAA;UAAIwB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,IAAI,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5C7B,OAAA;UAAGwB,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEM,IAAI,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAPnCE,IAAI,CAACd,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLxB,cAAc,iBACbL,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzB,OAAA;QAAIwB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5CtB,QAAQ,CAACuB,GAAG,CAAEK,OAAO,iBACpBnC,OAAA;QAEEwB,SAAS,EAAC,cAAc;QACxBQ,OAAO,EAAEA,CAAA,KAAMT,kBAAkB,CAACY,OAAO,CAAClB,EAAE,CAAE;QAAAQ,QAAA,gBAE9CzB,OAAA;UAAIwB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEU,OAAO,CAACC;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChD7B,OAAA;UAAGwB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEU,OAAO,CAACE;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChD7B,OAAA;UAAGwB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEU,OAAO,CAACD;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GANzCM,OAAO,CAAClB,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAjFID,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAmFX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}