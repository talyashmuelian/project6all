{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactfullstack\\\\FSWD_project5\\\\project5\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [inputs, setInputs] = useState({});\n  const handleChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    setInputs(values => ({\n      ...values,\n      [name]: value\n    }));\n  };\n  async function fetchData() {\n    try {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const data = await response.json();\n      console.log(data);\n      for (let i of data) {\n        if (i[\"username\"] == inputs.username && i[\"geo\"][\"lat\"] == inputs.password) {\n          alert(inputs);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(inputs);\n    fetchData();\n    // let arrUsers = [];\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then((response) => response.json())\n    //   .then((json) => {\n    //     arrUsers = json;\n    //     console.log(arrUsers);\n    //   });\n    // console.log(arrUsers);\n    // const myArray = Array.from(arrUsers);\n    // console.log(myArray);\n    // for (let i of myArray) {\n    //   if (i[\"username\"] == inputs.name && i[\"geo\"][\"lat\"] == inputs.value) {\n    //     alert(inputs);\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter your name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: inputs.username || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter your password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: inputs.password || \"\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"y88sAu/TO9eENcClZmyxJnz9qPA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","ReactDOM","jsxDEV","_jsxDEV","Login","_s","inputs","setInputs","handleChange","event","name","target","value","values","fetchData","response","fetch","data","json","console","log","i","username","password","alert","error","handleSubmit","preventDefault","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/reactfullstack/FSWD_project5/project5/src/pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nconst Login = () => {\r\n  const [inputs, setInputs] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    setInputs((values) => ({ ...values, [name]: value }));\r\n  };\r\n\r\n  async function fetchData() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      for (let i of data) {\r\n        if (\r\n          i[\"username\"] == inputs.username &&\r\n          i[\"geo\"][\"lat\"] == inputs.password\r\n        ) {\r\n          alert(inputs);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(inputs);\r\n    fetchData();\r\n    // let arrUsers = [];\r\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    //   .then((response) => response.json())\r\n    //   .then((json) => {\r\n    //     arrUsers = json;\r\n    //     console.log(arrUsers);\r\n    //   });\r\n    // console.log(arrUsers);\r\n    // const myArray = Array.from(arrUsers);\r\n    // console.log(myArray);\r\n    // for (let i of myArray) {\r\n    //   if (i[\"username\"] == inputs.name && i[\"geo\"][\"lat\"] == inputs.value) {\r\n    //     alert(inputs);\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Enter your name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={inputs.username || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Enter your password:\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={inputs.password || \"\"}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,MAAME,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;IAChCL,SAAS,CAAEM,MAAM,KAAM;MAAE,GAAGA,MAAM;MAAE,CAACH,IAAI,GAAGE;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,eAAeE,SAASA,CAAA,EAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CACF,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,KAAK,IAAII,CAAC,IAAIJ,IAAI,EAAE;QAClB,IACEI,CAAC,CAAC,UAAU,CAAC,IAAIf,MAAM,CAACgB,QAAQ,IAChCD,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAIf,MAAM,CAACiB,QAAQ,EAClC;UACAC,KAAK,CAAClB,MAAM,CAAC;QACf;MACF;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EAEA,MAAMC,YAAY,GAAIjB,KAAK,IAAK;IAC9BA,KAAK,CAACkB,cAAc,CAAC,CAAC;IACtBR,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC;IACnBQ,SAAS,CAAC,CAAC;IACX;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACEX,OAAA;IAAMyB,QAAQ,EAAEF,YAAa;IAAAG,QAAA,gBAC3B1B,OAAA;MAAA0B,QAAA,GAAO,kBAEL,eAAA1B,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXpB,IAAI,EAAC,UAAU;QACfE,KAAK,EAAEN,MAAM,CAACgB,QAAQ,IAAI,EAAG;QAC7BS,QAAQ,EAAEvB;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRhC,OAAA;MAAA0B,QAAA,GAAO,sBAEL,eAAA1B,OAAA;QACE2B,IAAI,EAAC,UAAU;QACfpB,IAAI,EAAC,UAAU;QACfE,KAAK,EAAEN,MAAM,CAACiB,QAAQ,IAAI,EAAG;QAC7BQ,QAAQ,EAAEvB;MAAa;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRhC,OAAA;MAAO2B,IAAI,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEX,CAAC;AAAC9B,EAAA,CAzEID,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AA2EX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}