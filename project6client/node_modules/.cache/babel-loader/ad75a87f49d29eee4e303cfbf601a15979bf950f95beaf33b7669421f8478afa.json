{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\project6all\\\\project6client\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import \"./Posts.css\";\n// import {\n//   requestsGet,\n//   requestsPost,\n//   requestsPut,\n//   requestsDelete,\n// } from \"../requestsToServer.js\";\n\n// const Post = ({ post, onPostSelect }) => {\n//   const [showComments, setShowComments] = useState(false);\n//   const [comments, setComments] = useState([]);\n\n//   const handleToggleComments = async () => {\n//     if (showComments) {\n//       setShowComments(false);\n//     } else {\n//       try {\n//         const data = await requestsGet(`/posts/${post.id}/comments`);\n//         // const response = await fetch(\n//         //   `http://localhost:4000/posts/${post.id}/comments`\n//         // );\n//         // const data = await response.json();\n//         setComments(data);\n//         setShowComments(true);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"post-item\">\n//       <h2\n//         className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\n//         onClick={() => onPostSelect(post.id)}\n//       >\n//         {post.title}\n//       </h2>\n//       <div className=\"post-body\">{post.body}</div>\n//       <button className=\"comments-toggle\" onClick={handleToggleComments}>\n//         {showComments ? \"Hide Comments\" : \"Show Comments\"}\n//       </button>\n//       {showComments && (\n//         <div className=\"comments-container\">\n//           {comments.map((comment) => (\n//             <div key={comment.id} className=\"comment-item\">\n//               <h4 className=\"comment-name\">{comment.name}</h4>\n//               <div className=\"comment-email\">{comment.email}</div>\n//               <div className=\"comment-body\">{comment.body}</div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const Posts = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [selectedPost, setSelectedPost] = useState(null);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n//         const data = await requestsGet(`/users/${user.id}/posts`);\n//         // const response = await fetch(\n//         //   `http://localhost:4000/users/${user.id}/posts`\n//         // );\n//         // const data = await response.json();\n//         console.log(data);\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n\n//     fetchData();\n//   }, []);\n\n//   const handlePostSelect = (postId) => {\n//     setSelectedPost(postId);\n//   };\n\n//   return (\n//     <div className=\"posts-container\">\n//       <h1 className=\"posts-header\">Posts</h1>\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <Post key={post.id} post={post} onPostSelect={handlePostSelect} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Posts;\n\nimport { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { requestsGet, requestsPost, requestsPut, requestsDelete } from \"../requestsToServer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = _ref => {\n  _s();\n  let {\n    comment,\n    onUpdateComment,\n    onDeleteComment\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(comment.name);\n  const [editedEmail, setEditedEmail] = useState(comment.email);\n  const [editedBody, setEditedBody] = useState(comment.body);\n  const handleEditComment = () => {\n    setEditing(true);\n  };\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedName(comment.name);\n    setEditedEmail(comment.email);\n    setEditedBody(comment.body);\n  };\n  const handleUpdateComment = async () => {\n    try {\n      const updatedComment = await requestsPut(`/comments/${comment.id}`, {\n        name: editedName,\n        email: editedEmail,\n        body: editedBody\n      });\n      onUpdateComment(updatedComment);\n      setEditing(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteComment = async () => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      try {\n        await requestsDelete(`/comments/${comment.id}`);\n        onDeleteComment(comment.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-item\",\n    children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedName,\n        onChange: e => setEditedName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedEmail,\n        onChange: e => setEditedEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedBody,\n        onChange: e => setEditedBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateComment,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-name\",\n        children: comment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-email\",\n        children: comment.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-body\",\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditComment,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteComment,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"v9uOVnNVxTUiq06buUgX8nNQpm4=\");\n_c = Comment;\nconst Post = _ref2 => {\n  _s2();\n  let {\n    post,\n    onPostSelect,\n    onUpdatePost,\n    onDeletePost\n  } = _ref2;\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(post.title);\n  const [editedBody, setEditedBody] = useState(post.body);\n  const handleToggleComments = async () => {\n    if (showComments) {\n      setShowComments(false);\n    } else {\n      try {\n        const data = await requestsGet(`/posts/${post.id}/comments`);\n        setComments(data);\n        setShowComments(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleEditPost = () => {\n    setEditing(true);\n  };\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedTitle(post.title);\n    setEditedBody(post.body);\n  };\n  const handleUpdatePost = async () => {\n    try {\n      const updatedPost = await requestsPut(`/posts/${post.id}`, {\n        title: editedTitle,\n        body: editedBody\n      });\n      onUpdatePost(updatedPost);\n      setEditing(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeletePost = async () => {\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      try {\n        await requestsDelete(`/posts/${post.id}`);\n        onDeletePost(post.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTitle,\n        onChange: e => setEditedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedBody,\n        onChange: e => setEditedBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdatePost,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `post-title ${onPostSelect === post.id ? \"active\" : \"\"}`,\n        onClick: () => onPostSelect(post.id),\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-body\",\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditPost,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comments-toggle\",\n        onClick: handleToggleComments,\n        children: showComments ? \"Hide Comments\" : \"Show Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          onUpdateComment: setComments,\n          onDeleteComment: setComments\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s2(Post, \"zD1ShdvegoDIfqAH+IXAzq8/1N0=\");\n_c2 = Post;\nconst Posts = () => {\n  _s3();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [addingPost, setAddingPost] = useState(false);\n  const [newPostTitle, setNewPostTitle] = useState(\"\");\n  const [newPostBody, setNewPostBody] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const data = await requestsGet(`/users/${user.id}/posts`);\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handlePostSelect = postId => {\n    setSelectedPost(postId);\n  };\n  const handleAddPost = () => {\n    setAddingPost(true);\n  };\n  const handleCancelAddPost = () => {\n    setAddingPost(false);\n    setNewPostTitle(\"\");\n    setNewPostBody(\"\");\n  };\n  const handleSavePost = async () => {\n    try {\n      const newPost = await requestsPost(`/posts`, {\n        userId: user.id,\n        id: 0,\n        title: newPostTitle,\n        body: newPostBody\n      });\n      setPosts(prevPosts => [...prevPosts, newPost]);\n      setAddingPost(false);\n      setNewPostTitle(\"\");\n      setNewPostBody(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUpdatePost = updatedPost => {\n    setPosts(prevPosts => prevPosts.map(post => post.id === updatedPost.id ? {\n      ...post,\n      ...updatedPost\n    } : post));\n  };\n  const handleDeletePost = deletedPostId => {\n    setPosts(prevPosts => prevPosts.filter(post => post.id !== deletedPostId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), addingPost ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter post title\",\n        value: newPostTitle,\n        onChange: e => setNewPostTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter post body\",\n        value: newPostBody,\n        onChange: e => setNewPostBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSavePost,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelAddPost,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-post-button\",\n      onClick: handleAddPost,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onPostSelect: handlePostSelect,\n        onUpdatePost: handleUpdatePost,\n        onDeletePost: handleDeletePost\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n_s3(Posts, \"LJrgLG7HAAnf5QEq+CRc8mjyjWM=\");\n_c3 = Posts;\nexport default Posts;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"Post\");\n$RefreshReg$(_c3, \"Posts\");","map":{"version":3,"names":["useEffect","useState","requestsGet","requestsPost","requestsPut","requestsDelete","jsxDEV","_jsxDEV","Comment","_ref","_s","comment","onUpdateComment","onDeleteComment","editing","setEditing","editedName","setEditedName","name","editedEmail","setEditedEmail","email","editedBody","setEditedBody","body","handleEditComment","handleCancelEdit","handleUpdateComment","updatedComment","id","error","console","handleDeleteComment","window","confirm","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Post","_ref2","_s2","post","onPostSelect","onUpdatePost","onDeletePost","showComments","setShowComments","comments","setComments","editedTitle","setEditedTitle","title","handleToggleComments","data","handleEditPost","handleUpdatePost","updatedPost","handleDeletePost","map","_c2","Posts","_s3","posts","setPosts","selectedPost","setSelectedPost","addingPost","setAddingPost","newPostTitle","setNewPostTitle","newPostBody","setNewPostBody","fetchData","user","JSON","parse","localStorage","getItem","handlePostSelect","postId","handleAddPost","handleCancelAddPost","handleSavePost","newPost","userId","prevPosts","deletedPostId","filter","placeholder","_c3","$RefreshReg$"],"sources":["C:/fullstack/project6all/project6client/src/pages/Posts.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import \"./Posts.css\";\r\n// import {\r\n//   requestsGet,\r\n//   requestsPost,\r\n//   requestsPut,\r\n//   requestsDelete,\r\n// } from \"../requestsToServer.js\";\r\n\r\n// const Post = ({ post, onPostSelect }) => {\r\n//   const [showComments, setShowComments] = useState(false);\r\n//   const [comments, setComments] = useState([]);\r\n\r\n//   const handleToggleComments = async () => {\r\n//     if (showComments) {\r\n//       setShowComments(false);\r\n//     } else {\r\n//       try {\r\n//         const data = await requestsGet(`/posts/${post.id}/comments`);\r\n//         // const response = await fetch(\r\n//         //   `http://localhost:4000/posts/${post.id}/comments`\r\n//         // );\r\n//         // const data = await response.json();\r\n//         setComments(data);\r\n//         setShowComments(true);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post-item\">\r\n//       <h2\r\n//         className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\r\n//         onClick={() => onPostSelect(post.id)}\r\n//       >\r\n//         {post.title}\r\n//       </h2>\r\n//       <div className=\"post-body\">{post.body}</div>\r\n//       <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n//         {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n//       </button>\r\n//       {showComments && (\r\n//         <div className=\"comments-container\">\r\n//           {comments.map((comment) => (\r\n//             <div key={comment.id} className=\"comment-item\">\r\n//               <h4 className=\"comment-name\">{comment.name}</h4>\r\n//               <div className=\"comment-email\">{comment.email}</div>\r\n//               <div className=\"comment-body\">{comment.body}</div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Posts = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n//         const data = await requestsGet(`/users/${user.id}/posts`);\r\n//         // const response = await fetch(\r\n//         //   `http://localhost:4000/users/${user.id}/posts`\r\n//         // );\r\n//         // const data = await response.json();\r\n//         console.log(data);\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handlePostSelect = (postId) => {\r\n//     setSelectedPost(postId);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"posts-container\">\r\n//       <h1 className=\"posts-header\">Posts</h1>\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <Post key={post.id} post={post} onPostSelect={handlePostSelect} />\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Posts;\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./Posts.css\";\r\nimport {\r\n  requestsGet,\r\n  requestsPost,\r\n  requestsPut,\r\n  requestsDelete,\r\n} from \"../requestsToServer.js\";\r\n\r\nconst Comment = ({ comment, onUpdateComment, onDeleteComment }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedName, setEditedName] = useState(comment.name);\r\n  const [editedEmail, setEditedEmail] = useState(comment.email);\r\n  const [editedBody, setEditedBody] = useState(comment.body);\r\n\r\n  const handleEditComment = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditedName(comment.name);\r\n    setEditedEmail(comment.email);\r\n    setEditedBody(comment.body);\r\n  };\r\n\r\n  const handleUpdateComment = async () => {\r\n    try {\r\n      const updatedComment = await requestsPut(`/comments/${comment.id}`, {\r\n        name: editedName,\r\n        email: editedEmail,\r\n        body: editedBody,\r\n      });\r\n      onUpdateComment(updatedComment);\r\n      setEditing(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\r\n      try {\r\n        await requestsDelete(`/comments/${comment.id}`);\r\n        onDeleteComment(comment.id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-item\">\r\n      {editing ? (\r\n        <div className=\"comment-edit\">\r\n          <input\r\n            type=\"text\"\r\n            value={editedName}\r\n            onChange={(e) => setEditedName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editedEmail}\r\n            onChange={(e) => setEditedEmail(e.target.value)}\r\n          />\r\n          <textarea\r\n            value={editedBody}\r\n            onChange={(e) => setEditedBody(e.target.value)}\r\n          />\r\n          <div className=\"comment-edit-actions\">\r\n            <button onClick={handleUpdateComment}>Save</button>\r\n            <button onClick={handleCancelEdit}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h4 className=\"comment-name\">{comment.name}</h4>\r\n          <div className=\"comment-email\">{comment.email}</div>\r\n          <div className=\"comment-body\">{comment.body}</div>\r\n          <div className=\"comment-actions\">\r\n            <button onClick={handleEditComment}>Edit</button>\r\n            <button onClick={handleDeleteComment}>Delete</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = ({ post, onPostSelect, onUpdatePost, onDeletePost }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState(post.title);\r\n  const [editedBody, setEditedBody] = useState(post.body);\r\n\r\n  const handleToggleComments = async () => {\r\n    if (showComments) {\r\n      setShowComments(false);\r\n    } else {\r\n      try {\r\n        const data = await requestsGet(`/posts/${post.id}/comments`);\r\n        setComments(data);\r\n        setShowComments(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditPost = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditedTitle(post.title);\r\n    setEditedBody(post.body);\r\n  };\r\n\r\n  const handleUpdatePost = async () => {\r\n    try {\r\n      const updatedPost = await requestsPut(`/posts/${post.id}`, {\r\n        title: editedTitle,\r\n        body: editedBody,\r\n      });\r\n      onUpdatePost(updatedPost);\r\n      setEditing(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n      try {\r\n        await requestsDelete(`/posts/${post.id}`);\r\n        onDeletePost(post.id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-item\">\r\n      {editing ? (\r\n        <div className=\"post-edit\">\r\n          <input\r\n            type=\"text\"\r\n            value={editedTitle}\r\n            onChange={(e) => setEditedTitle(e.target.value)}\r\n          />\r\n          <textarea\r\n            value={editedBody}\r\n            onChange={(e) => setEditedBody(e.target.value)}\r\n          />\r\n          <div className=\"post-edit-actions\">\r\n            <button onClick={handleUpdatePost}>Save</button>\r\n            <button onClick={handleCancelEdit}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2\r\n            className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\r\n            onClick={() => onPostSelect(post.id)}\r\n          >\r\n            {post.title}\r\n          </h2>\r\n          <div className=\"post-body\">{post.body}</div>\r\n          <div className=\"post-actions\">\r\n            <button onClick={handleEditPost}>Edit</button>\r\n            <button onClick={handleDeletePost}>Delete</button>\r\n          </div>\r\n          <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n            {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n          </button>\r\n          {showComments && (\r\n            <div className=\"comments-container\">\r\n              {comments.map((comment) => (\r\n                <Comment\r\n                  key={comment.id}\r\n                  comment={comment}\r\n                  onUpdateComment={setComments}\r\n                  onDeleteComment={setComments}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [addingPost, setAddingPost] = useState(false);\r\n  const [newPostTitle, setNewPostTitle] = useState(\"\");\r\n  const [newPostBody, setNewPostBody] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n        const data = await requestsGet(`/users/${user.id}/posts`);\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePostSelect = (postId) => {\r\n    setSelectedPost(postId);\r\n  };\r\n\r\n  const handleAddPost = () => {\r\n    setAddingPost(true);\r\n  };\r\n\r\n  const handleCancelAddPost = () => {\r\n    setAddingPost(false);\r\n    setNewPostTitle(\"\");\r\n    setNewPostBody(\"\");\r\n  };\r\n\r\n  const handleSavePost = async () => {\r\n    try {\r\n      const newPost = await requestsPost(`/posts`, {\r\n        userId: user.id,\r\n        id: 0,\r\n        title: newPostTitle,\r\n        body: newPostBody,\r\n      });\r\n      setPosts((prevPosts) => [...prevPosts, newPost]);\r\n      setAddingPost(false);\r\n      setNewPostTitle(\"\");\r\n      setNewPostBody(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePost = (updatedPost) => {\r\n    setPosts((prevPosts) =>\r\n      prevPosts.map((post) =>\r\n        post.id === updatedPost.id ? { ...post, ...updatedPost } : post\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDeletePost = (deletedPostId) => {\r\n    setPosts((prevPosts) =>\r\n      prevPosts.filter((post) => post.id !== deletedPostId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Posts</h1>\r\n      {addingPost ? (\r\n        <div className=\"add-post-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter post title\"\r\n            value={newPostTitle}\r\n            onChange={(e) => setNewPostTitle(e.target.value)}\r\n          />\r\n          <textarea\r\n            placeholder=\"Enter post body\"\r\n            value={newPostBody}\r\n            onChange={(e) => setNewPostBody(e.target.value)}\r\n          />\r\n          <div className=\"add-post-actions\">\r\n            <button onClick={handleSavePost}>Save</button>\r\n            <button onClick={handleCancelAddPost}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <button className=\"add-post-button\" onClick={handleAddPost}>\r\n          Add Post\r\n        </button>\r\n      )}\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n            onPostSelect={handlePostSelect}\r\n            onUpdatePost={handleUpdatePost}\r\n            onDeletePost={handleDeletePost}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}