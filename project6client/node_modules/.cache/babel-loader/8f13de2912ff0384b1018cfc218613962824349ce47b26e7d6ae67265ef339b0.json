{"ast":null,"code":"const hostname = \"http://localhost:4000\";\n//const hostname = \"https://jsonplaceholder.typicode.com\";\n\nexport async function requestsGet(path) {\n  console.log(hostname + path);\n  const response = await fetch(hostname + path);\n  return await response.json();\n}\nexport async function requestsPost(path, object) {\n  let requestBody;\n  if (typeof object === \"string\") {\n    requestBody = object;\n  } else {\n    requestBody = JSON.stringify(object);\n  }\n  console.log(requestBody);\n  const response = await fetch(hostname + path, {\n    method: \"POST\",\n    body: requestBody,\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });\n  return await response.json();\n}\nexport async function requestsPut(path, object) {\n  console.log(\"in put\");\n  console.log(object);\n  const response = await fetch(hostname + path, {\n    method: \"PUT\",\n    body: JSON.stringify(object),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n  return await response.json();\n}\nexport async function requestsDelete(path) {\n  const response = await fetch(hostname + path, {\n    method: \"DELETE\"\n  });\n  return await response.json();\n}","map":{"version":3,"names":["hostname","requestsGet","path","console","log","response","fetch","json","requestsPost","object","requestBody","JSON","stringify","method","body","headers","requestsPut","requestsDelete"],"sources":["C:/fullstack/project6all/project6client/src/requestsToServer.js"],"sourcesContent":["const hostname = \"http://localhost:4000\";\r\n//const hostname = \"https://jsonplaceholder.typicode.com\";\r\n\r\nexport async function requestsGet(path) {\r\n  console.log(hostname + path);\r\n  const response = await fetch(hostname + path);\r\n  return await response.json();\r\n}\r\n\r\nexport async function requestsPost(path, object) {\r\n  let requestBody;\r\n  if (typeof object === \"string\") {\r\n    requestBody = object;\r\n  } else {\r\n    requestBody = JSON.stringify(object);\r\n  }\r\n\r\n  console.log(requestBody);\r\n\r\n  const response = await fetch(hostname + path, {\r\n    method: \"POST\",\r\n    body: requestBody,\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport async function requestsPut(path, object) {\r\n  console.log(\"in put\");\r\n  console.log(object);\r\n  const response = await fetch(hostname + path, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(object),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  return await response.json();\r\n}\r\n\r\nexport async function requestsDelete(path) {\r\n  const response = await fetch(hostname + path, {\r\n    method: \"DELETE\",\r\n  });\r\n  return await response.json();\r\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AACxC;;AAEA,OAAO,eAAeC,WAAWA,CAACC,IAAI,EAAE;EACtCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,GAAGE,IAAI,CAAC;EAC5B,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,IAAI,CAAC;EAC7C,OAAO,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeC,YAAYA,CAACN,IAAI,EAAEO,MAAM,EAAE;EAC/C,IAAIC,WAAW;EACf,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;IAC9BC,WAAW,GAAGD,MAAM;EACtB,CAAC,MAAM;IACLC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;EACtC;EAEAN,OAAO,CAACC,GAAG,CAACM,WAAW,CAAC;EAExB,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,IAAI,EAAE;IAC5CW,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEJ,WAAW;IACjBK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAO,MAAMV,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeS,WAAWA,CAACd,IAAI,EAAEO,MAAM,EAAE;EAC9CN,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrBD,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;EACnB,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,IAAI,EAAE;IAC5CW,MAAM,EAAE,KAAK;IACbC,IAAI,EAAEH,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC;IAC5BM,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAO,MAAMV,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B;AAEA,OAAO,eAAeU,cAAcA,CAACf,IAAI,EAAE;EACzC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAGE,IAAI,EAAE;IAC5CW,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAO,MAAMR,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}