{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactfullstack\\\\FSWD_project5\\\\project5\\\\src\\\\pages\\\\Albums.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { Outlet, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Album = _ref => {\n  _s();\n  let {\n    album,\n    onAlbumSelect\n  } = _ref;\n  var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const handleToggleComments = async () => {\n    if (showComments) {\n      setShowComments(false);\n    } else {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/albums/${album.id}/photos`);\n        const data = await response.json();\n        setComments(data);\n        setShowComments(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    onClick: () => onAlbumSelect(album.id),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `post-title ${onAlbumSelect === album.id ? \"active\" : \"\"}`,\n      children: album.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Photos\",\n      children: \"Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Album, \"dtBkjhrgp2i8EO3d396swvkNOcw=\");\n_c = Album;\nconst Albums = () => {\n  _s2();\n  const [albums, setAlbums] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${user.id}/albums`);\n        const data = await response.json();\n        setAlbums(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleAlbumSelect = albumId => {\n    alert(albumId);\n    //window.location.href = `Albums/${albumId}/Photos`;\n    //window.location.href = \"/Photos\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: albums.map(album => /*#__PURE__*/_jsxDEV(Album, {\n        album: album,\n        onAlbumSelect: handleAlbumSelect\n      }, album.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(Albums, \"DHvgJmXkmmdinOuSgnIBsmgeMeg=\");\n_c2 = Albums;\nexport default Albums;\nvar _c, _c2;\n$RefreshReg$(_c, \"Album\");\n$RefreshReg$(_c2, \"Albums\");","map":{"version":3,"names":["useEffect","useState","Outlet","Link","jsxDEV","_jsxDEV","Album","_ref","_s","album","onAlbumSelect","user","JSON","parse","localStorage","getItem","showComments","setShowComments","comments","setComments","handleToggleComments","response","fetch","id","data","json","error","console","className","onClick","children","title","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","Albums","_s2","albums","setAlbums","selectedPost","setSelectedPost","fetchData","handleAlbumSelect","albumId","alert","map","_c2","$RefreshReg$"],"sources":["C:/reactfullstack/FSWD_project5/project5/src/pages/Albums.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Posts.css\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\n\r\nconst Album = ({ album, onAlbumSelect }) => {\r\n  var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const handleToggleComments = async () => {\r\n    if (showComments) {\r\n      setShowComments(false);\r\n    } else {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/albums/${album.id}/photos`\r\n        );\r\n        const data = await response.json();\r\n        setComments(data);\r\n        setShowComments(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-item\" onClick={() => onAlbumSelect(album.id)}>\r\n      <h2\r\n        className={`post-title ${onAlbumSelect === album.id ? \"active\" : \"\"}`}\r\n      >\r\n        {album.title}\r\n      </h2>\r\n      {/* <Link to={`/Users/${user.id}/Albums/${album.id}/Photos`}>Info</Link> */}\r\n      <Link to=\"/Photos\">Info</Link>\r\n      {/* <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n        {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n      </button>\r\n      {showComments && (\r\n        <div className=\"comments-container\">\r\n          {comments.map((comment) => (\r\n            <div key={comment.id} className=\"comment-item\">\r\n              <h4 className=\"comment-name\">{comment.name}</h4>\r\n              <div className=\"comment-email\">{comment.email}</div>\r\n              <div className=\"comment-body\">{comment.body}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Albums = () => {\r\n  const [albums, setAlbums] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/users/${user.id}/albums`\r\n        );\r\n        const data = await response.json();\r\n        setAlbums(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAlbumSelect = (albumId) => {\r\n    alert(albumId);\r\n    //window.location.href = `Albums/${albumId}/Photos`;\r\n    //window.location.href = \"/Photos\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Albums</h1>\r\n      <div className=\"posts-list\">\r\n        {albums.map((album) => (\r\n          <Album\r\n            key={album.id}\r\n            album={album}\r\n            onAlbumSelect={handleAlbumSelect}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Albums;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}