{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\project6all\\\\project6client\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import \"./Posts.css\";\n// import {\n//   requestsGet,\n//   requestsPost,\n//   requestsPut,\n//   requestsDelete,\n// } from \"../requestsToServer.js\";\n\n// const Post = ({ post, onPostSelect }) => {\n//   const [showComments, setShowComments] = useState(false);\n//   const [comments, setComments] = useState([]);\n\n//   const handleToggleComments = async () => {\n//     if (showComments) {\n//       setShowComments(false);\n//     } else {\n//       try {\n//         const data = await requestsGet(`/posts/${post.id}/comments`);\n//         // const response = await fetch(\n//         //   `http://localhost:4000/posts/${post.id}/comments`\n//         // );\n//         // const data = await response.json();\n//         setComments(data);\n//         setShowComments(true);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"post-item\">\n//       <h2\n//         className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\n//         onClick={() => onPostSelect(post.id)}\n//       >\n//         {post.title}\n//       </h2>\n//       <div className=\"post-body\">{post.body}</div>\n//       <button className=\"comments-toggle\" onClick={handleToggleComments}>\n//         {showComments ? \"Hide Comments\" : \"Show Comments\"}\n//       </button>\n//       {showComments && (\n//         <div className=\"comments-container\">\n//           {comments.map((comment) => (\n//             <div key={comment.id} className=\"comment-item\">\n//               <h4 className=\"comment-name\">{comment.name}</h4>\n//               <div className=\"comment-email\">{comment.email}</div>\n//               <div className=\"comment-body\">{comment.body}</div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const Posts = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [selectedPost, setSelectedPost] = useState(null);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n\n//         const data = await requestsGet(`/users/${user.id}/posts`);\n//         // const response = await fetch(\n//         //   `http://localhost:4000/users/${user.id}/posts`\n//         // );\n//         // const data = await response.json();\n//         console.log(data);\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n\n//     fetchData();\n//   }, []);\n\n//   const handlePostSelect = (postId) => {\n//     setSelectedPost(postId);\n//   };\n\n//   return (\n//     <div className=\"posts-container\">\n//       <h1 className=\"posts-header\">Posts</h1>\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <Post key={post.id} post={post} onPostSelect={handlePostSelect} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Posts;\n\nimport { useState, useEffect } from \"react\";\nimport \"./Posts.css\";\nimport { requestsGet, requestsPost, requestsPut, requestsDelete } from \"../requestsToServer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = _ref => {\n  _s();\n  let {\n    onAddComment\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    onAddComment({\n      name,\n      email,\n      body\n    });\n    setName(\"\");\n    setEmail(\"\");\n    setBody(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"comment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body\",\n        children: \"Body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"QPRXLQRRxtuLEmGMaXnfsBUCmAE=\");\n_c = CommentForm;\nconst Comment = _ref2 => {\n  let {\n    comment,\n    onUpdateComment,\n    onDeleteComment\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"comment-name\",\n      children: comment.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-email\",\n      children: comment.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-body\",\n      children: comment.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-comment-btn\",\n      onClick: () => onUpdateComment(comment.id),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-comment-btn\",\n      onClick: () => onDeleteComment(comment.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Comment;\nconst Post = _ref3 => {\n  _s2();\n  let {\n    post,\n    onPostSelect,\n    onUpdatePost,\n    onDeletePost\n  } = _ref3;\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const handleToggleComments = async () => {\n    if (showComments) {\n      setShowComments(false);\n    } else {\n      try {\n        const data = await requestsGet(`/posts/${post.id}/comments`);\n        setComments(data);\n        setShowComments(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleAddComment = async newComment => {\n    try {\n      const createdComment = await requestsPost(`/posts/${post.id}/comments`, newComment);\n      setComments(prevComments => [...prevComments, createdComment]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUpdateComment = async commentId => {\n    const updatedName = prompt(\"Enter the new name:\");\n    const updatedEmail = prompt(\"Enter the new email:\");\n    const updatedBody = prompt(\"Enter the new body:\");\n    if (updatedName && updatedEmail && updatedBody) {\n      try {\n        const updatedComment = await requestsPut(`/comments/${commentId}`, {\n          name: updatedName,\n          email: updatedEmail,\n          body: updatedBody\n        });\n        setComments(prevComments => prevComments.map(comment => comment.id === commentId ? updatedComment : comment));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      try {\n        await requestsDelete(`/comments/${commentId}`);\n        setComments(prevComments => prevComments.filter(comment => comment.id !== commentId));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `post-title ${onPostSelect === post.id ? \"active\" : \"\"}`,\n      onClick: () => onPostSelect(post.id),\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"comments-toggle\",\n      onClick: handleToggleComments,\n      children: showComments ? \"Hide Comments\" : \"Show Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        onAddComment: handleAddComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        onUpdateComment: handleUpdateComment,\n        onDeleteComment: handleDeleteComment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s2(Post, \"dtBkjhrgp2i8EO3d396swvkNOcw=\");\n_c3 = Post;\nconst PostForm = _ref4 => {\n  _s3();\n  let {\n    onAddPost\n  } = _ref4;\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    onAddPost({\n      title,\n      body\n    });\n    setTitle(\"\");\n    setBody(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"post-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"body\",\n        children: \"Body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s3(PostForm, \"6HXhu2MyhlZpOMFDXlcyR7kq/h8=\");\n_c4 = PostForm;\nconst Posts = () => {\n  _s4();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [showAddPostForm, setShowAddPostForm] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const data = await requestsGet(`/users/${user.id}/posts`);\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handlePostSelect = postId => {\n    setSelectedPost(postId);\n  };\n  const handleAddPost = async newPost => {\n    try {\n      const user = JSON.parse(localStorage.getItem(\"currentUser\"));\n      const createdPost = await requestsPost(`/users/${user.id}/posts`, newPost);\n      setPosts(prevPosts => [...prevPosts, createdPost]);\n      setShowAddPostForm(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUpdatePost = async postId => {\n    const updatedTitle = prompt(\"Enter the new title:\");\n    const updatedBody = prompt(\"Enter the new body:\");\n    if (updatedTitle && updatedBody) {\n      try {\n        const updatedPost = await requestsPut(`/posts/${postId}`, {\n          title: updatedTitle,\n          body: updatedBody\n        });\n        setPosts(prevPosts => prevPosts.map(post => post.id === postId ? updatedPost : post));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleDeletePost = async postId => {\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      try {\n        await requestsDelete(`/posts/${postId}`);\n        setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n        setSelectedPost(null);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), showAddPostForm ? /*#__PURE__*/_jsxDEV(PostForm, {\n      onAddPost: handleAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-post-btn\",\n      onClick: () => setShowAddPostForm(true),\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onPostSelect: handlePostSelect,\n        onUpdatePost: handleUpdatePost,\n        onDeletePost: handleDeletePost\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s4(Posts, \"ijUNZTB7sOqEgFIajgWKiTWXt8k=\");\n_c5 = Posts;\nexport default Posts;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CommentForm\");\n$RefreshReg$(_c2, \"Comment\");\n$RefreshReg$(_c3, \"Post\");\n$RefreshReg$(_c4, \"PostForm\");\n$RefreshReg$(_c5, \"Posts\");","map":{"version":3,"names":["useState","useEffect","requestsGet","requestsPost","requestsPut","requestsDelete","jsxDEV","_jsxDEV","CommentForm","_ref","_s","onAddComment","name","setName","email","setEmail","body","setBody","handleSubmit","event","preventDefault","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","required","_c","Comment","_ref2","comment","onUpdateComment","onDeleteComment","onClick","_c2","Post","_ref3","_s2","post","onPostSelect","onUpdatePost","onDeletePost","showComments","setShowComments","comments","setComments","handleToggleComments","data","error","console","handleAddComment","newComment","createdComment","prevComments","handleUpdateComment","commentId","updatedName","prompt","updatedEmail","updatedBody","updatedComment","map","handleDeleteComment","window","confirm","filter","title","_c3","PostForm","_ref4","_s3","onAddPost","setTitle","_c4","Posts","_s4","posts","setPosts","selectedPost","setSelectedPost","showAddPostForm","setShowAddPostForm","fetchData","user","JSON","parse","localStorage","getItem","handlePostSelect","postId","handleAddPost","newPost","createdPost","prevPosts","handleUpdatePost","updatedTitle","updatedPost","handleDeletePost","_c5","$RefreshReg$"],"sources":["C:/fullstack/project6all/project6client/src/pages/Posts.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import \"./Posts.css\";\r\n// import {\r\n//   requestsGet,\r\n//   requestsPost,\r\n//   requestsPut,\r\n//   requestsDelete,\r\n// } from \"../requestsToServer.js\";\r\n\r\n// const Post = ({ post, onPostSelect }) => {\r\n//   const [showComments, setShowComments] = useState(false);\r\n//   const [comments, setComments] = useState([]);\r\n\r\n//   const handleToggleComments = async () => {\r\n//     if (showComments) {\r\n//       setShowComments(false);\r\n//     } else {\r\n//       try {\r\n//         const data = await requestsGet(`/posts/${post.id}/comments`);\r\n//         // const response = await fetch(\r\n//         //   `http://localhost:4000/posts/${post.id}/comments`\r\n//         // );\r\n//         // const data = await response.json();\r\n//         setComments(data);\r\n//         setShowComments(true);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"post-item\">\r\n//       <h2\r\n//         className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\r\n//         onClick={() => onPostSelect(post.id)}\r\n//       >\r\n//         {post.title}\r\n//       </h2>\r\n//       <div className=\"post-body\">{post.body}</div>\r\n//       <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n//         {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n//       </button>\r\n//       {showComments && (\r\n//         <div className=\"comments-container\">\r\n//           {comments.map((comment) => (\r\n//             <div key={comment.id} className=\"comment-item\">\r\n//               <h4 className=\"comment-name\">{comment.name}</h4>\r\n//               <div className=\"comment-email\">{comment.email}</div>\r\n//               <div className=\"comment-body\">{comment.body}</div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const Posts = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n//         const data = await requestsGet(`/users/${user.id}/posts`);\r\n//         // const response = await fetch(\r\n//         //   `http://localhost:4000/users/${user.id}/posts`\r\n//         // );\r\n//         // const data = await response.json();\r\n//         console.log(data);\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handlePostSelect = (postId) => {\r\n//     setSelectedPost(postId);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"posts-container\">\r\n//       <h1 className=\"posts-header\">Posts</h1>\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <Post key={post.id} post={post} onPostSelect={handlePostSelect} />\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Posts;\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./Posts.css\";\r\nimport {\r\n  requestsGet,\r\n  requestsPost,\r\n  requestsPut,\r\n  requestsDelete,\r\n} from \"../requestsToServer.js\";\r\n\r\nconst CommentForm = ({ onAddComment }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onAddComment({ name, email, body });\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setBody(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"comment-form\" onSubmit={handleSubmit}>\r\n      <h3>Add Comment</h3>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"body\">Body:</label>\r\n        <textarea\r\n          id=\"body\"\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Comment = ({ comment, onUpdateComment, onDeleteComment }) => {\r\n  return (\r\n    <div className=\"comment-item\">\r\n      <h4 className=\"comment-name\">{comment.name}</h4>\r\n      <div className=\"comment-email\">{comment.email}</div>\r\n      <div className=\"comment-body\">{comment.body}</div>\r\n      <button\r\n        className=\"edit-comment-btn\"\r\n        onClick={() => onUpdateComment(comment.id)}\r\n      >\r\n        Edit\r\n      </button>\r\n      <button\r\n        className=\"delete-comment-btn\"\r\n        onClick={() => onDeleteComment(comment.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = ({ post, onPostSelect, onUpdatePost, onDeletePost }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const handleToggleComments = async () => {\r\n    if (showComments) {\r\n      setShowComments(false);\r\n    } else {\r\n      try {\r\n        const data = await requestsGet(`/posts/${post.id}/comments`);\r\n        setComments(data);\r\n        setShowComments(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (newComment) => {\r\n    try {\r\n      const createdComment = await requestsPost(\r\n        `/posts/${post.id}/comments`,\r\n        newComment\r\n      );\r\n      setComments((prevComments) => [...prevComments, createdComment]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateComment = async (commentId) => {\r\n    const updatedName = prompt(\"Enter the new name:\");\r\n    const updatedEmail = prompt(\"Enter the new email:\");\r\n    const updatedBody = prompt(\"Enter the new body:\");\r\n    if (updatedName && updatedEmail && updatedBody) {\r\n      try {\r\n        const updatedComment = await requestsPut(`/comments/${commentId}`, {\r\n          name: updatedName,\r\n          email: updatedEmail,\r\n          body: updatedBody,\r\n        });\r\n        setComments((prevComments) =>\r\n          prevComments.map((comment) =>\r\n            comment.id === commentId ? updatedComment : comment\r\n          )\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\r\n      try {\r\n        await requestsDelete(`/comments/${commentId}`);\r\n        setComments((prevComments) =>\r\n          prevComments.filter((comment) => comment.id !== commentId)\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-item\">\r\n      <h2\r\n        className={`post-title ${onPostSelect === post.id ? \"active\" : \"\"}`}\r\n        onClick={() => onPostSelect(post.id)}\r\n      >\r\n        {post.title}\r\n      </h2>\r\n      <div className=\"post-body\">{post.body}</div>\r\n      <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n        {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n      </button>\r\n      {showComments && (\r\n        <div className=\"comments-container\">\r\n          <CommentForm onAddComment={handleAddComment} />\r\n          {comments.map((comment) => (\r\n            <Comment\r\n              key={comment.id}\r\n              comment={comment}\r\n              onUpdateComment={handleUpdateComment}\r\n              onDeleteComment={handleDeleteComment}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostForm = ({ onAddPost }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onAddPost({ title, body });\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"post-form\" onSubmit={handleSubmit}>\r\n      <h3>Add Post</h3>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\">Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"body\">Body:</label>\r\n        <textarea\r\n          id=\"body\"\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [showAddPostForm, setShowAddPostForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const data = await requestsGet(`/users/${user.id}/posts`);\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePostSelect = (postId) => {\r\n    setSelectedPost(postId);\r\n  };\r\n\r\n  const handleAddPost = async (newPost) => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n      const createdPost = await requestsPost(\r\n        `/users/${user.id}/posts`,\r\n        newPost\r\n      );\r\n      setPosts((prevPosts) => [...prevPosts, createdPost]);\r\n      setShowAddPostForm(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePost = async (postId) => {\r\n    const updatedTitle = prompt(\"Enter the new title:\");\r\n    const updatedBody = prompt(\"Enter the new body:\");\r\n    if (updatedTitle && updatedBody) {\r\n      try {\r\n        const updatedPost = await requestsPut(`/posts/${postId}`, {\r\n          title: updatedTitle,\r\n          body: updatedBody,\r\n        });\r\n        setPosts((prevPosts) =>\r\n          prevPosts.map((post) => (post.id === postId ? updatedPost : post))\r\n        );\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n      try {\r\n        await requestsDelete(`/posts/${postId}`);\r\n        setPosts((prevPosts) => prevPosts.filter((post) => post.id !== postId));\r\n        setSelectedPost(null);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Posts</h1>\r\n      {showAddPostForm ? (\r\n        <PostForm onAddPost={handleAddPost} />\r\n      ) : (\r\n        <button\r\n          className=\"add-post-btn\"\r\n          onClick={() => setShowAddPostForm(true)}\r\n        >\r\n          Add Post\r\n        </button>\r\n      )}\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n            onPostSelect={handlePostSelect}\r\n            onUpdatePost={handleUpdatePost}\r\n            onDeletePost={handleDeletePost}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}