{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\project6all\\\\project6client\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { requestsGet, requestsPost, requestsPut, requestsDelete } from \"../requestsToServer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = _ref => {\n  _s();\n  let {\n    comment,\n    onUpdateComment,\n    onDeleteComment\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [editedName, setEditedName] = useState(comment.name);\n  const [editedEmail, setEditedEmail] = useState(comment.email);\n  const [editedBody, setEditedBody] = useState(comment.body);\n  const handleEditComment = () => {\n    setEditing(true);\n  };\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedName(comment.name);\n    setEditedEmail(comment.email);\n    setEditedBody(comment.body);\n  };\n  const handleUpdateComment = async () => {\n    try {\n      const updatedComment = {\n        postId: comment.postId,\n        id: comment.id,\n        name: editedName,\n        email: editedEmail,\n        body: editedBody\n      };\n      await requestsPut(`/comments/${comment.id}`, updatedComment);\n      onUpdateComment(updatedComment);\n      setEditing(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteComment = async () => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      try {\n        await requestsDelete(`/comments/${comment.id}`);\n        onDeleteComment(comment.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-item\",\n    children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedName,\n        onChange: e => setEditedName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedEmail,\n        onChange: e => setEditedEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedBody,\n        onChange: e => setEditedBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateComment,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-name\",\n        children: comment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-email\",\n        children: comment.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-body\",\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditComment,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteComment,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"v9uOVnNVxTUiq06buUgX8nNQpm4=\");\n_c = Comment;\nconst Post = _ref2 => {\n  _s2();\n  let {\n    post,\n    onUpdatePost,\n    onDeletePost\n  } = _ref2;\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    name: \"\",\n    email: \"\",\n    body: \"\"\n  });\n  const [editing, setEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(post.title);\n  const [editedBody, setEditedBody] = useState(post.body);\n  const handleToggleComments = async () => {\n    if (showComments) {\n      setShowComments(false);\n    } else {\n      try {\n        const data = await requestsGet(`/posts/${post.id}/comments`);\n        setComments(data);\n        setShowComments(true);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleAddComment = async () => {\n    try {\n      //const createdComment = await requestsPost(`/posts/${post.id}/comments`, {\n      const createdComment = {\n        postId: post.id,\n        id: 0,\n        name: newComment.name,\n        email: newComment.email,\n        body: newComment.body\n      };\n      await requestsPost(`/comments`, createdComment);\n      setComments([...comments, createdComment]);\n      setNewComment({\n        name: \"\",\n        email: \"\",\n        body: \"\"\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUpdateComment = updatedComment => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === updatedComment.id) {\n        return updatedComment;\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n  };\n  const handleDeleteComment = commentId => {\n    const updatedComments = comments.filter(comment => comment.id !== commentId);\n    setComments(updatedComments);\n  };\n\n  // const handleUpdateComment = async (updatedComment) => {\n  //   try {\n  //     console.log(\"line252\");\n  //     console.log(updatedComment);\n  //     await requestsPut(`/comments/${updatedComment.id}`, updatedComment);\n  //     const updatedComments = comments.map((comment) => {\n  //       if (comment.id === updatedComment.id) {\n  //         return updatedComment;\n  //       }\n  //       return comment;\n  //     });\n  //     setComments(updatedComments);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  // const handleDeleteComment = async (commentId) => {\n  //   try {\n  //     await requestsDelete(`/comments/${commentId}`);\n  //     const updatedComments = comments.filter(\n  //       (comment) => comment.id !== commentId\n  //     );\n  //     setComments(updatedComments);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const handleEditPost = () => {\n    setEditing(true);\n  };\n  const handleCancelEdit = () => {\n    setEditing(false);\n    setEditedTitle(post.title);\n    setEditedBody(post.body);\n  };\n  const handleUpdatePost = async () => {\n    try {\n      const updatedPost = {\n        id: post.id,\n        userId: post.userId,\n        title: editedTitle,\n        body: editedBody\n      };\n      await requestsPut(`/posts/${post.id}`, updatedPost);\n      onUpdatePost(updatedPost);\n      setEditing(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeletePost = async () => {\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      try {\n        await requestsDelete(`/posts/${post.id}`);\n        onDeletePost(post.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTitle,\n        onChange: e => setEditedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedBody,\n        onChange: e => setEditedBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-edit-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdatePost,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-body\",\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditPost,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeletePost,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"comments-toggle\",\n        onClick: handleToggleComments,\n        children: showComments ? \"Hide Comments\" : \"Show Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          onUpdateComment: handleUpdateComment,\n          onDeleteComment: handleDeleteComment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: newComment.name,\n            onChange: e => setNewComment({\n              ...newComment,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: newComment.email,\n            onChange: e => setNewComment({\n              ...newComment,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Comment\",\n            value: newComment.body,\n            onChange: e => setNewComment({\n              ...newComment,\n              body: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddComment,\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s2(Post, \"+/tCv30AzV9r6SGc6ak7sPaDF/8=\");\n_c2 = Post;\nconst Posts = () => {\n  _s3();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const data = await requestsGet(`/users/${user.id}/posts`);\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handlePostSelect = postId => {\n    setSelectedPost(postId);\n  };\n  const handleAddPost = async () => {\n    try {\n      var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n      let createdPost = {\n        userId: user.id,\n        id: 0,\n        title: newPost.title,\n        body: newPost.body\n      };\n      console.log(await requestsPost(`/posts`, createdPost));\n      setPosts([...posts, createdPost]);\n      setNewPost({\n        title: \"\",\n        body: \"\"\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const handleAddPost = async () => {\n  //   try {\n  //     var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n  //     const createdPost = await requestsPost(`/posts`, {\n  //       userId: user.id,\n  //       id: 0,\n  //       title: newPost.title,\n  //       body: newPost.body,\n  //     });\n  //     setPosts([...posts, createdPost]);\n  //     setNewPost({ title: \"\", body: \"\" });\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  const handleUpdatePost = updatedPost => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === updatedPost.id) {\n        return updatedPost;\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n  };\n  const handleDeletePost = postId => {\n    const updatedPosts = posts.filter(post => post.id !== postId);\n    setPosts(updatedPosts);\n    setSelectedPost(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: newPost.title,\n          onChange: e => setNewPost({\n            ...newPost,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Body\",\n          value: newPost.body,\n          onChange: e => setNewPost({\n            ...newPost,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddPost,\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onUpdatePost: handleUpdatePost,\n        onDeletePost: handleDeletePost\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n};\n_s3(Posts, \"OkeMtU0uVF7PgCGmZDGsiM1x9mM=\");\n_c3 = Posts;\nexport default Posts;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"Post\");\n$RefreshReg$(_c3, \"Posts\");","map":{"version":3,"names":["useEffect","useState","requestsGet","requestsPost","requestsPut","requestsDelete","jsxDEV","_jsxDEV","Comment","_ref","_s","comment","onUpdateComment","onDeleteComment","editing","setEditing","editedName","setEditedName","name","editedEmail","setEditedEmail","email","editedBody","setEditedBody","body","handleEditComment","handleCancelEdit","handleUpdateComment","updatedComment","postId","id","error","console","handleDeleteComment","window","confirm","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Post","_ref2","_s2","post","onUpdatePost","onDeletePost","showComments","setShowComments","comments","setComments","newComment","setNewComment","editedTitle","setEditedTitle","title","handleToggleComments","data","handleAddComment","createdComment","updatedComments","map","commentId","filter","handleEditPost","handleUpdatePost","updatedPost","userId","handleDeletePost","placeholder","_c2","Posts","_s3","posts","setPosts","selectedPost","setSelectedPost","newPost","setNewPost","fetchData","user","JSON","parse","localStorage","getItem","handlePostSelect","handleAddPost","createdPost","log","updatedPosts","_c3","$RefreshReg$"],"sources":["C:/fullstack/project6all/project6client/src/pages/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Posts.css\";\r\nimport {\r\n  requestsGet,\r\n  requestsPost,\r\n  requestsPut,\r\n  requestsDelete,\r\n} from \"../requestsToServer.js\";\r\n\r\nconst Comment = ({ comment, onUpdateComment, onDeleteComment }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedName, setEditedName] = useState(comment.name);\r\n  const [editedEmail, setEditedEmail] = useState(comment.email);\r\n  const [editedBody, setEditedBody] = useState(comment.body);\r\n\r\n  const handleEditComment = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditedName(comment.name);\r\n    setEditedEmail(comment.email);\r\n    setEditedBody(comment.body);\r\n  };\r\n\r\n  const handleUpdateComment = async () => {\r\n    try {\r\n      const updatedComment = {\r\n        postId: comment.postId,\r\n        id: comment.id,\r\n        name: editedName,\r\n        email: editedEmail,\r\n        body: editedBody,\r\n      };\r\n      await requestsPut(`/comments/${comment.id}`, updatedComment);\r\n      onUpdateComment(updatedComment);\r\n      setEditing(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\r\n      try {\r\n        await requestsDelete(`/comments/${comment.id}`);\r\n        onDeleteComment(comment.id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment-item\">\r\n      {editing ? (\r\n        <div className=\"comment-edit\">\r\n          <input\r\n            type=\"text\"\r\n            value={editedName}\r\n            onChange={(e) => setEditedName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={editedEmail}\r\n            onChange={(e) => setEditedEmail(e.target.value)}\r\n          />\r\n          <textarea\r\n            value={editedBody}\r\n            onChange={(e) => setEditedBody(e.target.value)}\r\n          />\r\n          <div className=\"comment-edit-actions\">\r\n            <button onClick={handleUpdateComment}>Save</button>\r\n            <button onClick={handleCancelEdit}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h4 className=\"comment-name\">{comment.name}</h4>\r\n          <div className=\"comment-email\">{comment.email}</div>\r\n          <div className=\"comment-body\">{comment.body}</div>\r\n          <div className=\"comment-actions\">\r\n            <button onClick={handleEditComment}>Edit</button>\r\n            <button onClick={handleDeleteComment}>Delete</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Post = ({ post, onUpdatePost, onDeletePost }) => {\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    body: \"\",\r\n  });\r\n  const [editing, setEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState(post.title);\r\n  const [editedBody, setEditedBody] = useState(post.body);\r\n\r\n  const handleToggleComments = async () => {\r\n    if (showComments) {\r\n      setShowComments(false);\r\n    } else {\r\n      try {\r\n        const data = await requestsGet(`/posts/${post.id}/comments`);\r\n        setComments(data);\r\n        setShowComments(true);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    try {\r\n      //const createdComment = await requestsPost(`/posts/${post.id}/comments`, {\r\n      const createdComment = {\r\n        postId: post.id,\r\n        id: 0,\r\n        name: newComment.name,\r\n        email: newComment.email,\r\n        body: newComment.body,\r\n      };\r\n      await requestsPost(`/comments`, createdComment);\r\n      setComments([...comments, createdComment]);\r\n      setNewComment({ name: \"\", email: \"\", body: \"\" });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateComment = (updatedComment) => {\r\n    const updatedComments = comments.map((comment) => {\r\n      if (comment.id === updatedComment.id) {\r\n        return updatedComment;\r\n      }\r\n      return comment;\r\n    });\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  const handleDeleteComment = (commentId) => {\r\n    const updatedComments = comments.filter(\r\n      (comment) => comment.id !== commentId\r\n    );\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  // const handleUpdateComment = async (updatedComment) => {\r\n  //   try {\r\n  //     console.log(\"line252\");\r\n  //     console.log(updatedComment);\r\n  //     await requestsPut(`/comments/${updatedComment.id}`, updatedComment);\r\n  //     const updatedComments = comments.map((comment) => {\r\n  //       if (comment.id === updatedComment.id) {\r\n  //         return updatedComment;\r\n  //       }\r\n  //       return comment;\r\n  //     });\r\n  //     setComments(updatedComments);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleDeleteComment = async (commentId) => {\r\n  //   try {\r\n  //     await requestsDelete(`/comments/${commentId}`);\r\n  //     const updatedComments = comments.filter(\r\n  //       (comment) => comment.id !== commentId\r\n  //     );\r\n  //     setComments(updatedComments);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const handleEditPost = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditing(false);\r\n    setEditedTitle(post.title);\r\n    setEditedBody(post.body);\r\n  };\r\n\r\n  const handleUpdatePost = async () => {\r\n    try {\r\n      const updatedPost = {\r\n        id: post.id,\r\n        userId: post.userId,\r\n        title: editedTitle,\r\n        body: editedBody,\r\n      };\r\n      await requestsPut(`/posts/${post.id}`, updatedPost);\r\n      onUpdatePost(updatedPost);\r\n      setEditing(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n      try {\r\n        await requestsDelete(`/posts/${post.id}`);\r\n        onDeletePost(post.id);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-item\">\r\n      {editing ? (\r\n        <div className=\"post-edit\">\r\n          <input\r\n            type=\"text\"\r\n            value={editedTitle}\r\n            onChange={(e) => setEditedTitle(e.target.value)}\r\n          />\r\n          <textarea\r\n            value={editedBody}\r\n            onChange={(e) => setEditedBody(e.target.value)}\r\n          />\r\n          <div className=\"post-edit-actions\">\r\n            <button onClick={handleUpdatePost}>Save</button>\r\n            <button onClick={handleCancelEdit}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h2 className=\"post-title\">{post.title}</h2>\r\n          <div className=\"post-body\">{post.body}</div>\r\n          <div className=\"post-actions\">\r\n            <button onClick={handleEditPost}>Edit</button>\r\n            <button onClick={handleDeletePost}>Delete</button>\r\n          </div>\r\n          <button className=\"comments-toggle\" onClick={handleToggleComments}>\r\n            {showComments ? \"Hide Comments\" : \"Show Comments\"}\r\n          </button>\r\n          {showComments && (\r\n            <div className=\"comments-container\">\r\n              {comments.map((comment) => (\r\n                <Comment\r\n                  key={comment.id}\r\n                  comment={comment}\r\n                  onUpdateComment={handleUpdateComment}\r\n                  onDeleteComment={handleDeleteComment}\r\n                />\r\n              ))}\r\n              {/* {comments.map((comment) => (\r\n                <Comment\r\n                  key={comment.id}\r\n                  comment={comment}\r\n                  onUpdateComment={(updatedComment) =>\r\n                    handleUpdateComment(updatedComment)\r\n                  }\r\n                  onDeleteComment={() => handleDeleteComment(comment.id)}\r\n                />\r\n              ))} */}\r\n              <div className=\"comment-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  value={newComment.name}\r\n                  onChange={(e) =>\r\n                    setNewComment({ ...newComment, name: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={newComment.email}\r\n                  onChange={(e) =>\r\n                    setNewComment({ ...newComment, email: e.target.value })\r\n                  }\r\n                />\r\n                <textarea\r\n                  placeholder=\"Comment\"\r\n                  value={newComment.body}\r\n                  onChange={(e) =>\r\n                    setNewComment({ ...newComment, body: e.target.value })\r\n                  }\r\n                />\r\n                <button onClick={handleAddComment}>Add Comment</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [newPost, setNewPost] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const data = await requestsGet(`/users/${user.id}/posts`);\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePostSelect = (postId) => {\r\n    setSelectedPost(postId);\r\n  };\r\n\r\n  const handleAddPost = async () => {\r\n    try {\r\n      var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n      let createdPost = {\r\n        userId: user.id,\r\n        id: 0,\r\n        title: newPost.title,\r\n        body: newPost.body,\r\n      };\r\n      console.log(await requestsPost(`/posts`, createdPost));\r\n      setPosts([...posts, createdPost]);\r\n      setNewPost({ title: \"\", body: \"\" });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // const handleAddPost = async () => {\r\n  //   try {\r\n  //     var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n  //     const createdPost = await requestsPost(`/posts`, {\r\n  //       userId: user.id,\r\n  //       id: 0,\r\n  //       title: newPost.title,\r\n  //       body: newPost.body,\r\n  //     });\r\n  //     setPosts([...posts, createdPost]);\r\n  //     setNewPost({ title: \"\", body: \"\" });\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const handleUpdatePost = (updatedPost) => {\r\n    const updatedPosts = posts.map((post) => {\r\n      if (post.id === updatedPost.id) {\r\n        return updatedPost;\r\n      }\r\n      return post;\r\n    });\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    const updatedPosts = posts.filter((post) => post.id !== postId);\r\n    setPosts(updatedPosts);\r\n    setSelectedPost(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Posts</h1>\r\n      <div className=\"posts-list\">\r\n        <div className=\"add-post-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={newPost.title}\r\n            onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n          />\r\n          <textarea\r\n            placeholder=\"Body\"\r\n            value={newPost.body}\r\n            onChange={(e) => setNewPost({ ...newPost, body: e.target.value })}\r\n          />\r\n          <button onClick={handleAddPost}>Add Post</button>\r\n        </div>\r\n        {posts.map((post) => (\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n            onUpdatePost={handleUpdatePost}\r\n            onDeletePost={handleDeletePost}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}