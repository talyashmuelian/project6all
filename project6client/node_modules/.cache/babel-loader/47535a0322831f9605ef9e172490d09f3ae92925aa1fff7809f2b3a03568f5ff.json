{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactfullstack\\\\FSWD_project5\\\\project5\\\\src\\\\pages\\\\Posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    postId\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n        const data = await response.json();\n        setComments(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = Comments;\nconst Posts = () => {\n  _s2();\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${user.id}/posts`);\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleSelectPost = postId => {\n    setSelectedPostId(postId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"posts-header\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: selectedPostId === post.id ? \"post selected\" : \"post\",\n        onClick: () => handleSelectPost(post.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedPostId && /*#__PURE__*/_jsxDEV(Comments, {\n      postId: selectedPostId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(Posts, \"DBwWm7YaZbywiEVxI7cAfYuZYOo=\");\n_c2 = Posts;\nexport default Posts;\n// import { useEffect, useState } from \"react\";\n// //import \"./Posts.css\";\n\n// const Posts = () => {\n//   const [posts, setPosts] = useState([]);\n//   const [selectedPost, setSelectedPost] = useState(null);\n//   const [comments, setComments] = useState([]);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n//         const response = await fetch(\n//           `https://jsonplaceholder.typicode.com/users/${user.id}/posts`\n//         );\n//         const data = await response.json();\n//         setPosts(data);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     }\n\n//     fetchData();\n//   }, []);\n\n//   useEffect(() => {\n//     async function fetchComments() {\n//       if (selectedPost !== null) {\n//         const response = await fetch(\n//           `https://jsonplaceholder.typicode.com/posts/${selectedPost.id}/comments`\n//         );\n//         const data = await response.json();\n//         setComments(data);\n//       }\n//     }\n\n//     fetchComments();\n//   }, [selectedPost]);\n\n//   const handlePostClick = (post) => {\n//     setSelectedPost(post);\n//   };\n\n//   return (\n//     <div className=\"posts-container\">\n//       <h1 className=\"posts-header\">Posts</h1>\n//       <div className=\"posts-list\">\n//         {posts.map((post) => (\n//           <div\n//             key={post.id}\n//             className={`post-item ${\n//               selectedPost !== null && selectedPost.id === post.id\n//                 ? \"selected-post\"\n//                 : \"\"\n//             }`}\n//             onClick={() => handlePostClick(post)}\n//           >\n//             <h2 className=\"post-title\">{post.title}</h2>\n//             <p className=\"post-body\">{post.body}</p>\n//           </div>\n//         ))}\n//       </div>\n//       {selectedPost !== null && (\n//         <div className=\"comments-container\">\n//           <h2 className=\"comments-header\">Comments for {selectedPost.title}</h2>\n//           <div className=\"comments-list\">\n//             {comments.map((comment) => (\n//               <div key={comment.id} className=\"comment-item\">\n//                 <h3 className=\"comment-name\">{comment.name}</h3>\n//                 <p className=\"comment-body\">{comment.body}</p>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Posts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"Posts\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Comments","_ref","_s","postId","comments","setComments","fetchData","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","name","body","id","_c","Posts","_s2","posts","setPosts","selectedPostId","setSelectedPostId","user","JSON","parse","localStorage","getItem","handleSelectPost","post","onClick","title","_c2","$RefreshReg$"],"sources":["C:/reactfullstack/FSWD_project5/project5/src/pages/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Posts.css\";\r\n\r\nconst Comments = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\r\n        );\r\n        const data = await response.json();\r\n        setComments(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [postId]);\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n      <h3>Comments:</h3>\r\n      {comments.map((comment) => (\r\n        <div key={comment.id} className=\"comment\">\r\n          <p>\r\n            <strong>{comment.name}</strong>\r\n          </p>\r\n          <p>{comment.body}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const response = await fetch(\r\n          `https://jsonplaceholder.typicode.com/users/${user.id}/posts`\r\n        );\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSelectPost = (postId) => {\r\n    setSelectedPostId(postId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h1 className=\"posts-header\">Posts</h1>\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <div\r\n            key={post.id}\r\n            className={selectedPostId === post.id ? \"post selected\" : \"post\"}\r\n            onClick={() => handleSelectPost(post.id)}\r\n          >\r\n            <h3>{post.title}</h3>\r\n            <p>{post.body}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedPostId && <Comments postId={selectedPostId} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n// import { useEffect, useState } from \"react\";\r\n// //import \"./Posts.css\";\r\n\r\n// const Posts = () => {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [selectedPost, setSelectedPost] = useState(null);\r\n//   const [comments, setComments] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       try {\r\n//         var user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n//         const response = await fetch(\r\n//           `https://jsonplaceholder.typicode.com/users/${user.id}/posts`\r\n//         );\r\n//         const data = await response.json();\r\n//         setPosts(data);\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//       }\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchComments() {\r\n//       if (selectedPost !== null) {\r\n//         const response = await fetch(\r\n//           `https://jsonplaceholder.typicode.com/posts/${selectedPost.id}/comments`\r\n//         );\r\n//         const data = await response.json();\r\n//         setComments(data);\r\n//       }\r\n//     }\r\n\r\n//     fetchComments();\r\n//   }, [selectedPost]);\r\n\r\n//   const handlePostClick = (post) => {\r\n//     setSelectedPost(post);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"posts-container\">\r\n//       <h1 className=\"posts-header\">Posts</h1>\r\n//       <div className=\"posts-list\">\r\n//         {posts.map((post) => (\r\n//           <div\r\n//             key={post.id}\r\n//             className={`post-item ${\r\n//               selectedPost !== null && selectedPost.id === post.id\r\n//                 ? \"selected-post\"\r\n//                 : \"\"\r\n//             }`}\r\n//             onClick={() => handlePostClick(post)}\r\n//           >\r\n//             <h2 className=\"post-title\">{post.title}</h2>\r\n//             <p className=\"post-body\">{post.body}</p>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       {selectedPost !== null && (\r\n//         <div className=\"comments-container\">\r\n//           <h2 className=\"comments-header\">Comments for {selectedPost.title}</h2>\r\n//           <div className=\"comments-list\">\r\n//             {comments.map((comment) => (\r\n//               <div key={comment.id} className=\"comment-item\">\r\n//                 <h3 className=\"comment-name\">{comment.name}</h3>\r\n//                 <p className=\"comment-body\">{comment.body}</p>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}